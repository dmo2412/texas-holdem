{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascript/js-new/deck.js","webpack:///./javascript/js-new/preflop.js","webpack:///./javascript/js-new/calling.js","webpack:///./node_modules/pokersolver/pokersolver.js","webpack:///./javascript/js-new/check.js","webpack:///./javascript/js-new/nextcard.js","webpack:///./javascript/js-new/raise.js","webpack:///./javascript/js-new/result.js","webpack:///./javascript/js-new/fold.js","webpack:///./javascript/js-new/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Deck","this","cards","suits","values","length","j","ele","concat","push","shuffleCards","temp","Math","floor","random","createCards","Preflop","window","player1","chips","deadmoney","currentBet","cardPool","holecards","showCards","status","player2","dealCount","pot","players","theData","deck","canvas","document","getElementById","ctx","getContext","player1Bet","player2Bet","player0","shift","setOrder","placeBlinds","card1","cardVal","player1Cards","d3","select","selectAll","data","enter","append","text","attr","first","clearRect","width","height","remove","startScoreboard","Call","betRound","count","firstBet","middleCards","turnCount","Card","str","substr","suit","toLowerCase","rank","indexOf","wildValue","replace","a","b","Hand","game","canDisqualify","wilds","sfLength","alwaysQualifies","lowestQualified","descr","Set","size","Error","obj","obj1","key1","card","handRank","handValues","constructor","map","sort","reverse","isPossible","solve","result","hand","compare","val","checkCardsLength","wildStatus","setRanks","wild","picks","excluding","filter","toString","join","hands","h","qualifiesHigh","highestRank","max","apply","lose","loseTo","Game","nonWilds","StraightFlush","super","resetWildCards","possibleStraight","nonCards","getCardsForFlush","sfQualify","stripWilds","straight","Straight","slice","RoyalFlush","NaturalRoyalFlush","WildRoyalFlush","FiveOfAKind","getNumCardsByRank","nextHighest","cardsInHand","FourOfAKindPairPlus","type","FourOfAKind","noKickers","FourWilds","ThreeOfAKindTwoPair","FullHouse","Flush","checkCards","wheelStatus","getWheel","wildCount","getGaps","checkHandLength","wildCards","cardsToCheck","gapCards","cardsList","gapCount","prevCard","diff","stripReturn","wheelCards","cardFound","TwoThreeOfAKind","ThreeOfAKind","ThreePair","TwoPair","OnePair","HighCard","PaiGowPokerHelper","baseHand","hiHand","loHand","loGame","hiGame","Array","isArray","hiCards","loCards","handValue","sfReturn","altGame","altHand","altRank","getSFData","possibleSF","possibleLoCards","bestLoCards","bestHand","handsToCheck","compareHands","winners","player","banker","qualifiesValid","hiWinner","loWinner","fullHand","splitHouseWay","gameRules","exportToGlobal","global","Check","flopCount","turnBetCount","riverBetCount","NextCard","innerHTML","styledCards","Raise","SolveHand","require","playerHands","rez1","rez2","winner","setCardPool","returnWinner","player2cards","winningPlayerName","dealCountTurn","winningHand","JSON","stringify","Fold","calling","checking","nextCard","raising","folding","preflopCallFive","preflopCall","postflopCall","postTurnCall","postRiverCall","postFlop","postTurn","postRiver","solveHands","preflopCheck","postflopCheck","postTurnCheck","postRiverCheck","preflopTwoTimesRaise","postflopRaise","postTurnRaise","postRiverRaise","resetHand","last","fold","raiseTwoTimes","check","addEventListener","deal","Cards","createGame","playerShift","onclick","dealCards","computer"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","export default class Deck {\n    constructor() {\n        this.cards = [];\n    }\n\n    createCards() {\n        let suits = ['s', 'c', 'h', 'd'];\n        let values = ['2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K', 'A'];\n        for (let i = 0; i < values.length; i++) {\n            for (let j = 0; j < suits.length; j++) {\n                let ele = values[i].concat(suits[j]);\n                this.cards.push(ele);\n            }\n        }\n        this.shuffleCards(this.cards)\n        \n    }\n\n    shuffleCards() {\n        var i, j, temp;\n        for (i = this.cards.length - 1; i > 0; i--) {\n            j = Math.floor(Math.random() * (i + 1));\n            temp = this.cards[i];\n            this.cards[i] = this.cards[j];\n            this.cards[j] = temp;\n        };\n        return this.cards;\n\n    }\n    retainCards() {\n        return this.cards;\n    }\n\n    resetCards() {\n        this.createCards(this.cards);\n    }\n\n\n}\n\n\n","import Deck from './deck';\n\nexport default class Preflop {\n    constructor() {\n        window.player1 = {\n            name: 'Mike McDermott',\n            chips: 1000,\n            deadmoney: 0,\n            currentBet: 0,\n            cardPool: [],\n            holecards: [],\n            showCards: {},\n            status: true\n        } \n        window.player2 = {\n            name: 'Phil Ivey',\n            chips: 1000,\n            deadmoney: 0,\n            currentBet: 0,\n            cardPool: [],\n            holecards: [],\n            showCards: {},\n            status: true\n        }\n        window.dealCount = 0;\n        window.pot = { name: 'Pot', chips: 0 }\n        window.players = [window.player1, window.player2];\n        window.theData = [window.player1, window.player2, window.pot];\n        window.deck = new Deck();\n        this.canvas = document.getElementById(\"myCanvas\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        window.player1Bet = [window.player1]\n        window.player2Bet = [window.player2]\n    }\n\n    setOrder() {\n        let player0 = window.players[0];\n        window.players.shift();\n        window.players.push(player0);\n    }\n\n    dealCards() {\n        if (window.dealCount === 0){\n        this.setOrder();\n        this.placeBlinds();\n        window.deck.createCards();\n        for (let i = 0; i < 2; i++) {\n            window.players[0].holecards.push(window.deck.cards[0]);\n            window.players[0].cardPool.push(window.deck.cards[0]);\n            window.deck.cards.shift();\n            window.players[1].holecards.push(window.deck.cards[0]);\n            window.players[1].cardPool.push(window.deck.cards[0]);\n            window.deck.cards.shift();\n        }\n        window.player1Cards = [];\n\n        let card1;\n        let cardVal;\n        for (let i = 0; i < 2; i++) {\n            card1 = window.player1.holecards[i];\n            if (card1[1] === 'd') {\n                cardVal = card1[0] + '🔹'\n                window.player1Cards.push(cardVal)\n            } else if (card1[1] === 's') {\n                cardVal = card1[0] + '♠️'\n                window.player1Cards.push(cardVal)\n            } else if (card1[1] === 'h') {\n                cardVal = card1[0] + '❤️'\n                window.player1Cards.push(cardVal)\n            } else if (card1[1] === 'c') {\n                cardVal = card1[0] + '🍀'\n                window.player1Cards.push(cardVal)\n            }\n        }\n        window.dealCount += 1;\n        d3.select(\"#player1carddiv\").selectAll(\"p\")\n            .data(window.player1Cards)\n            .enter()\n            .append('p')\n            .text(function (d) { return d })\n            .attr(\"class\", 'player1cards')\n\n        d3.select(\"#player2carddiv\").selectAll(\"p\")\n            .data(['🎴🎴'])\n            .enter()\n            .append('p')\n            .text(function (d) { return d })\n            .attr(\"class\", 'player2cards')\n    }\n    }\n\n    placeBlinds() {\n        let first;\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        if (window.players[0] === window.player1) {\n            window.player1.chips -= 5;\n            window.player1.deadmoney += 5;\n            window.player1.currentBet += 5;\n            // this.ctx.beginPath();\n            // this.ctx.arc(300, 20, 10, 0, Math.PI * 2);\n            // this.ctx.fillStyle = \"tomato\";\n            // this.ctx.text = '10';\n            // this.ctx.fill();\n            // this.ctx.closePath();\n            // this.ctx.strokeStyle = \"black\";\n            // this.ctx.stroke();\n\n            first = window.players[0]\n            window.players.shift();\n            window.players.push(first);\n\n            window.player2.chips -= 10;\n            window.player2.deadmoney += 10;\n            window.player2.currentBet += 10;\n            // this.ctx.beginPath();\n            // this.ctx.arc(260, 20, 10, 0, Math.PI * 2);\n            // this.ctx.fillStyle = \"tomato\";\n            // this.ctx.text = '10';\n            // this.ctx.fill();\n            // this.ctx.closePath();\n            // this.ctx.strokeStyle = \"black\";\n            // this.ctx.stroke();\n\n            first = window.players[0]\n            window.players.shift();\n            window.players.push(first);\n        } else if (window.players[0] === window.player2) {\n            window.player2.chips -= 5;\n            window.player2.deadmoney += 5;\n            window.player2.currentBet += 5;\n            // this.ctx.beginPath();\n            // this.ctx.arc(260, 20, 10, 0, Math.PI * 2);\n            // this.ctx.fillStyle = \"tomato\";\n            // this.ctx.text = '10';\n            // this.ctx.fill();\n            // this.ctx.closePath();\n            // this.ctx.strokeStyle = \"black\";\n            // this.ctx.stroke();\n\n            window.player1.chips -= 10;\n            window.player1.deadmoney += 10;\n            window.player1.currentBet += 10;\n\n            first = window.players[0]\n            window.players.shift();\n            window.players.push(first);\n\n            // this.ctx.beginPath();\n            // this.ctx.arc(270, 20, 10, 0, Math.PI * 2);\n            // this.ctx.fillStyle = \"tomato\";\n            // this.ctx.text = '10';\n            // this.ctx.fill();\n            // this.ctx.closePath();\n            // this.ctx.strokeStyle = \"black\";\n            // this.ctx.stroke();\n\n            first = window.players[0]\n            window.players.shift();\n            window.players.push(first);\n\n        } \n        window.pot.chips += 15;\n        d3.selectAll(\".playernames\").remove();\n        this.startScoreboard();\n\n        // d3.select('.MikeM').selectAll('img')\n        // .data(window.player1Bet)\n        // .enter()\n        // .append(\"p\")\n        // .text(function (d) {return \"current bet: \" + d.currentBet})\n        // .attr(\"class\", 'mikecurrentbet')\n    }\n\n    startScoreboard() {\n        d3.selectAll(\".playernames\").remove();\n        d3.select(\"#chipcount\").selectAll(\"p\")\n            .data(window.theData)\n            .enter()\n            .append(\"p\")\n            .text(function (d) { return d.name + \" : \" + d.chips; })\n            .attr(\"class\", \"playernames\");\n    }\n\n}","\n\nexport default class Call {\n    constructor() {\n        window.betRound = 0;\n        window.count = 0;\n        window.firstBet = 0;\n    }\n\n    preflopCallFive() {\n        if (window.firstBet === 0 && window.betRound === 0) {\n            if (window.players[0] === window.player1 && window.count === 0) {\n                window.player1.chips -= (window.player2.currentBet - window.player1.currentBet);\n                window.pot.chips += (window.player2.currentBet - window.player1.currentBet);\n                window.player1.deadmoney += (window.player2.currentBet - window.player1.currentBet);\n                window.player1.currentBet += (window.player2.currentBet - window.player1.currentBet);\n                let first = window.players[0];\n                window.players.shift();\n                window.players.push(first);\n            } else if (window.players[0] === window.player2 && window.count === 0) {\n                window.player2.chips -= (window.player1.currentBet - window.player2.currentBet);\n                window.pot.chips += (window.player1.currentBet - window.player2.currentBet);\n                window.player2.deadmoney += (window.player1.currentBet - window.player2.currentBet);\n                window.player2.currentBet += (window.player1.currentBet - window.player2.currentBet);\n                let first = window.players[0];\n                window.players.shift();\n                window.players.push(first);\n            }\n            window.firstBet += 1;\n           \n        }\n    }\n\n    preflopCall() {\n        if (window.firstBet > 0 && window.middleCards.length === 0 && window.players[1].currentBet > window.players[0].currentBet) {\n            debugger\n            window.players[0].chips -= (window.players[1].currentBet - window.players[0].currentBet);\n            \n            window.players[0].deadmoney += (window.players[1].currentBet -window.players[0].currentBet);\n            window.players[0].currentBet = (window.players[1].currentBet);\n            \n            window.pot.chips = window.players[1].currentBet + window.players[0].currentBet;\n            \n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n            window.turnCount += 1;\n            \n        }\n    }\n\n    postflopCall() {\n        if (window.betRound === 1 && window.players[1].currentBet > window.players[0].currentBet) {\n            window.players[0].chips -= (window.players[1].currentBet - window.players[0].currentBet);\n            window.pot.chips += window.players[1].currentBet - window.players[0].currentBet;\n            window.players[0].deadmoney += (window.players[1].currentBet - window.players[0].currentBet);\n            window.players[0].currentBet = (window.players[1].currentBet);\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n            window.turnCount += 1;\n            window.betRound += 1;\n        }\n    }\n\n    postTurnCall() {\n        if (window.betRound === 3 && window.players[1].currentBet > window.players[0].currentBet) {\n            window.players[0].chips -= (window.players[1].currentBet - window.players[0].currentBet);\n            window.pot.chips += window.players[1].currentBet - window.players[0].currentBet;\n            window.players[0].deadmoney += (window.players[1].currentBet - window.players[0].currentBet);\n            window.players[0].currentBet = (window.players[1].currentBet);\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n            window.turnCount += 1;\n        }\n    }\n\n    postRiverCall() {\n        if (window.betRound === 4 && window.players[1].currentBet > window.players[0].currentBet) {\n            window.players[0].chips -= (window.players[1].currentBet - window.players[0].currentBet);\n            window.pot.chips += window.players[1].currentBet - window.players[0].currentBet;\n            window.players[0].deadmoney += (window.players[1].currentBet - window.players[0].currentBet);\n            window.players[0].currentBet = (window.players[1].currentBet);\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n            window.betRound += 1;\n        }\n    }\n\n\n\n    \n\n}","/**\n * pokersolver v2.1.2\n * Copyright (c) 2016, James Simpson of GoldFire Studios\n * http://goldfirestudios.com\n */\n(function () {\n  'use strict'; // NOTE: The 'joker' will be denoted with a value of 'O' and any suit.\n\n  var values = ['1', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K', 'A'];\n  /**\n   * Base Card class that defines a single card.\n   */\n\n  class Card {\n    constructor(str) {\n      this.value = str.substr(0, 1);\n      this.suit = str.substr(1, 1).toLowerCase();\n      this.rank = values.indexOf(this.value);\n      this.wildValue = str.substr(0, 1);\n    }\n\n    toString() {\n      return this.wildValue.replace('T', '10') + this.suit;\n    }\n\n    static sort(a, b) {\n      if (a.rank > b.rank) {\n        return -1;\n      } else if (a.rank < b.rank) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n\n  }\n  /**\n   * Base Hand class that handles comparisons of full hands.\n   */\n\n\n  class Hand {\n    constructor(cards, name, game, canDisqualify) {\n      this.cardPool = [];\n      this.cards = [];\n      this.suits = {};\n      this.values = [];\n      this.wilds = [];\n      this.name = name;\n      this.game = game;\n      this.sfLength = 0;\n      this.alwaysQualifies = true; // Qualification rules apply for dealer's hand.\n      // Also applies for single player games, like video poker.\n\n      if (canDisqualify && this.game.lowestQualified) {\n        this.alwaysQualifies = false;\n      } // Ensure no duplicate cards in standard game.\n\n\n      if (game.descr === 'standard' && new Set(cards).size !== cards.length) {\n        throw new Error('Duplicate cards');\n      } // Get rank based on game.\n\n\n      var handRank = this.game.handValues.length;\n\n      for (var i = 0; i < this.game.handValues.length; i++) {\n        if (this.game.handValues[i] === this.constructor) {\n          break;\n        }\n      }\n\n      this.rank = handRank - i; // Set up the pool of cards.\n\n      this.cardPool = cards.map(function (c) {\n        return typeof c === 'string' ? new Card(c) : c;\n      }); // Fix the card ranks for wild cards, and sort.\n\n      for (var i = 0; i < this.cardPool.length; i++) {\n        card = this.cardPool[i];\n\n        if (card.value === this.game.wildValue) {\n          card.rank = -1;\n        }\n      }\n\n      this.cardPool = this.cardPool.sort(Card.sort); // Create the arrays of suits and values.\n\n      var obj, obj1, key, key1, card;\n\n      for (var i = 0; i < this.cardPool.length; i++) {\n        // Make sure this value already exists in the object.\n        card = this.cardPool[i]; // We do something special if this is a wild card.\n\n        if (card.rank === -1) {\n          this.wilds.push(card);\n        } else {\n          (obj = this.suits)[key = card.suit] || (obj[key] = []);\n          (obj1 = this.values)[key1 = card.rank] || (obj1[key1] = []); // Add the value to the array for that type in the object.\n\n          this.suits[card.suit].push(card);\n          this.values[card.rank].push(card);\n        }\n      }\n\n      this.values.reverse();\n      this.isPossible = this.solve();\n    }\n    /**\n     * Compare current hand with another to determine which is the winner.\n     * @param  {Hand} a Hand to compare to.\n     * @return {Number}\n     */\n\n\n    compare(a) {\n      if (this.rank < a.rank) {\n        return 1;\n      } else if (this.rank > a.rank) {\n        return -1;\n      }\n\n      var result = 0;\n\n      for (var i = 0; i <= 4; i++) {\n        if (this.cards[i] && a.cards[i] && this.cards[i].rank < a.cards[i].rank) {\n          result = 1;\n          break;\n        } else if (this.cards[i] && a.cards[i] && this.cards[i].rank > a.cards[i].rank) {\n          result = -1;\n          break;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Determine whether a hand loses to another.\n     * @param  {Hand} hand Hand to compare to.\n     * @return {Boolean}\n     */\n\n\n    loseTo(hand) {\n      return this.compare(hand) > 0;\n    }\n    /**\n     * Determine the number of cards in a hand of a rank.\n     * @param  {Number} val Index of this.values.\n     * @return {Number} Number of cards having the rank, including wild cards.\n     */\n\n\n    getNumCardsByRank(val) {\n      var cards = this.values[val];\n      var checkCardsLength = cards ? cards.length : 0;\n\n      for (var i = 0; i < this.wilds.length; i++) {\n        if (this.wilds[i].rank > -1) {\n          continue;\n        } else if (cards) {\n          if (this.game.wildStatus === 1 || cards[0].rank === values.length - 1) {\n            checkCardsLength += 1;\n          }\n        } else if (this.game.wildStatus === 1 || val === values.length - 1) {\n          checkCardsLength += 1;\n        }\n      }\n\n      return checkCardsLength;\n    }\n    /**\n     * Determine the cards in a suit for a flush.\n     * @param  {String} suit Key for this.suits.\n     * @param  {Boolean} setRanks Whether to set the ranks for the wild cards.\n     * @return {Array} Cards having the suit, including wild cards.\n     */\n\n\n    getCardsForFlush(suit, setRanks) {\n      var cards = (this.suits[suit] || []).sort(Card.sort);\n\n      for (var i = 0; i < this.wilds.length; i++) {\n        var wild = this.wilds[i];\n\n        if (setRanks) {\n          var j = 0;\n\n          while (j < values.length && j < cards.length) {\n            if (cards[j].rank === values.length - 1 - j) {\n              j += 1;\n            } else {\n              break;\n            }\n          }\n\n          wild.rank = values.length - 1 - j;\n          wild.wildValue = values[wild.rank];\n        }\n\n        cards.push(wild);\n        cards = cards.sort(Card.sort);\n      }\n\n      return cards;\n    }\n    /**\n     * Resets the rank and wild values of the wild cards.\n     */\n\n\n    resetWildCards() {\n      for (var i = 0; i < this.wilds.length; i++) {\n        this.wilds[i].rank = -1;\n        this.wilds[i].wildValue = this.wilds[i].value;\n      }\n    }\n    /**\n     * Highest card comparison.\n     * @return {Array} Highest cards\n     */\n\n\n    nextHighest() {\n      var picks;\n      var excluding = [];\n      excluding = excluding.concat(this.cards);\n      picks = this.cardPool.filter(function (card) {\n        if (excluding.indexOf(card) < 0) {\n          return true;\n        }\n      }); // Account for remaining wild card when it must be ace.\n\n      if (this.game.wildStatus === 0) {\n        for (var i = 0; i < picks.length; i++) {\n          var card = picks[i];\n\n          if (card.rank === -1) {\n            card.wildValue = 'A';\n            card.rank = values.length - 1;\n          }\n        }\n\n        picks = picks.sort(Card.sort);\n      }\n\n      return picks;\n    }\n    /**\n     * Return list of contained cards in human readable format.\n     * @return {String}\n     */\n\n\n    toString() {\n      var cards = this.cards.map(function (c) {\n        return c.toString();\n      });\n      return cards.join(', ');\n    }\n    /**\n     * Return array of contained cards.\n     * @return {Array}\n     */\n\n\n    toArray() {\n      var cards = this.cards.map(function (c) {\n        return c.toString();\n      });\n      return cards;\n    }\n    /**\n     * Determine if qualifying hand.\n     * @return {Boolean}\n     */\n\n\n    qualifiesHigh() {\n      if (!this.game.lowestQualified || this.alwaysQualifies) {\n        return true;\n      }\n\n      return this.compare(Hand.solve(this.game.lowestQualified, this.game)) <= 0;\n    }\n    /**\n     * Find highest ranked hands and remove any that don't qualify or lose to another hand.\n     * @param  {Array} hands Hands to evaluate.\n     * @return {Array}       Winning hands.\n     */\n\n\n    static winners(hands) {\n      hands = hands.filter(function (h) {\n        return h.qualifiesHigh();\n      });\n      var highestRank = Math.max.apply(Math, hands.map(function (h) {\n        return h.rank;\n      }));\n      hands = hands.filter(function (h) {\n        return h.rank === highestRank;\n      });\n      hands = hands.filter(function (h) {\n        var lose = false;\n\n        for (var i = 0; i < hands.length; i++) {\n          lose = h.loseTo(hands[i]);\n\n          if (lose) {\n            break;\n          }\n        }\n\n        return !lose;\n      });\n      return hands;\n    }\n    /**\n     * Build and return the best hand.\n     * @param  {Array} cards Array of cards (['Ad', '3c', 'Th', ...]).\n     * @param  {String} game Game being played.\n     * @param  {Boolean} canDisqualify Check for a qualified hand.\n     * @return {Hand}       Best hand.\n     */\n\n\n    static solve(cards, game, canDisqualify) {\n      game = game || 'standard';\n      game = typeof game === 'string' ? new Game(game) : game;\n      cards = cards || [''];\n      var hands = game.handValues;\n      var result = null;\n\n      for (var i = 0; i < hands.length; i++) {\n        result = new hands[i](cards, game, canDisqualify);\n\n        if (result.isPossible) {\n          break;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Separate cards based on if they are wild cards.\n     * @param  {Array} cards Array of cards (['Ad', '3c', 'Th', ...]).\n     * @param  {Game} game Game being played.\n     * @return {Array} [wilds, nonWilds] Wild and non-Wild Cards.\n     */\n\n\n    static stripWilds(cards, game) {\n      var card, wilds, nonWilds;\n      cards = cards || [''];\n      wilds = [];\n      nonWilds = [];\n\n      for (var i = 0; i < cards.length; i++) {\n        card = cards[i];\n\n        if (card.rank === -1) {\n          wilds.push(cards[i]);\n        } else {\n          nonWilds.push(cards[i]);\n        }\n      }\n\n      return [wilds, nonWilds];\n    }\n\n  }\n\n  class StraightFlush extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Straight Flush', game, canDisqualify);\n    }\n\n    solve() {\n      var cards;\n      this.resetWildCards();\n      var possibleStraight = null;\n      var nonCards = [];\n\n      for (var suit in this.suits) {\n        cards = this.getCardsForFlush(suit, false);\n\n        if (cards && cards.length >= this.game.sfQualify) {\n          possibleStraight = cards;\n          break;\n        }\n      }\n\n      if (possibleStraight) {\n        if (this.game.descr !== 'standard') {\n          for (var suit in this.suits) {\n            if (possibleStraight[0].suit !== suit) {\n              nonCards = nonCards.concat(this.suits[suit] || []);\n              nonCards = Hand.stripWilds(nonCards, this.game)[1];\n            }\n          }\n        }\n\n        var straight = new Straight(possibleStraight, this.game);\n\n        if (straight.isPossible) {\n          this.cards = straight.cards;\n          this.cards = this.cards.concat(nonCards);\n          this.sfLength = straight.sfLength;\n        }\n      }\n\n      if (this.cards[0] && this.cards[0].rank === 13) {\n        this.descr = 'Royal Flush';\n      } else if (this.cards.length >= this.game.sfQualify) {\n        this.descr = this.name + ', ' + this.cards[0].toString().slice(0, -1) + suit + ' High';\n      }\n\n      return this.cards.length >= this.game.sfQualify;\n    }\n\n  }\n\n  class RoyalFlush extends StraightFlush {\n    constructor(cards, game, canDisqualify) {\n      super(cards, game, canDisqualify);\n    }\n\n    solve() {\n      this.resetWildCards();\n      var result = super.solve();\n      return result && this.descr === 'Royal Flush';\n    }\n\n  }\n\n  class NaturalRoyalFlush extends RoyalFlush {\n    constructor(cards, game, canDisqualify) {\n      super(cards, game, canDisqualify);\n    }\n\n    solve() {\n      var i = 0;\n      this.resetWildCards();\n      var result = super.solve();\n\n      if (result && this.cards) {\n        for (i = 0; i < this.game.sfQualify && i < this.cards.length; i++) {\n          if (this.cards[i].value === this.game.wildValue) {\n            result = false;\n            this.descr = 'Wild Royal Flush';\n            break;\n          }\n        }\n\n        if (i === this.game.sfQualify) {\n          this.descr = 'Royal Flush';\n        }\n      }\n\n      return result;\n    }\n\n  }\n\n  class WildRoyalFlush extends RoyalFlush {\n    constructor(cards, game, canDisqualify) {\n      super(cards, game, canDisqualify);\n    }\n\n    solve() {\n      var i = 0;\n      this.resetWildCards();\n      var result = super.solve();\n\n      if (result && this.cards) {\n        for (i = 0; i < this.game.sfQualify && i < this.cards.length; i++) {\n          if (this.cards[i].value === this.game.wildValue) {\n            this.descr = 'Wild Royal Flush';\n            break;\n          }\n        }\n\n        if (i === this.game.sfQualify) {\n          result = false;\n          this.descr = 'Royal Flush';\n        }\n      }\n\n      return result;\n    }\n\n  }\n\n  class FiveOfAKind extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Five of a Kind', game, canDisqualify);\n    }\n\n    solve() {\n      this.resetWildCards();\n\n      for (var i = 0; i < this.values.length; i++) {\n        if (this.getNumCardsByRank(i) === 5) {\n          this.cards = this.values[i] || [];\n\n          for (var j = 0; j < this.wilds.length && this.cards.length < 5; j++) {\n            var wild = this.wilds[j];\n\n            if (this.cards) {\n              wild.rank = this.cards[0].rank;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n\n          this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - 5));\n          break;\n        }\n      }\n\n      if (this.cards.length >= 5) {\n        this.descr = this.name + ', ' + this.cards[0].toString().slice(0, -1) + '\\'s';\n      }\n\n      return this.cards.length >= 5;\n    }\n\n  }\n\n  class FourOfAKindPairPlus extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Four of a Kind with Pair or Better', game, canDisqualify);\n    }\n\n    solve() {\n      var cards;\n      this.resetWildCards();\n\n      for (var i = 0; i < this.values.length; i++) {\n        if (this.getNumCardsByRank(i) === 4) {\n          this.cards = this.values[i] || [];\n\n          for (var j = 0; j < this.wilds.length && this.cards.length < 4; j++) {\n            var wild = this.wilds[j];\n\n            if (this.cards) {\n              wild.rank = this.cards[0].rank;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n\n          break;\n        }\n      }\n\n      if (this.cards.length === 4) {\n        for (i = 0; i < this.values.length; i++) {\n          cards = this.values[i];\n\n          if (cards && this.cards[0].wildValue === cards[0].wildValue) {\n            continue;\n          }\n\n          if (this.getNumCardsByRank(i) >= 2) {\n            this.cards = this.cards.concat(cards || []);\n\n            for (var j = 0; j < this.wilds.length; j++) {\n              var wild = this.wilds[j];\n\n              if (wild.rank !== -1) {\n                continue;\n              }\n\n              if (cards) {\n                wild.rank = cards[0].rank;\n              } else if (this.cards[0].rank === values.length - 1 && this.game.wildStatus === 1) {\n                wild.rank = values.length - 2;\n              } else {\n                wild.rank = values.length - 1;\n              }\n\n              wild.wildValue = values[wild.rank];\n              this.cards.push(wild);\n            }\n\n            this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - 6));\n            break;\n          }\n        }\n      }\n\n      if (this.cards.length >= 6) {\n        var type = this.cards[0].toString().slice(0, -1) + '\\'s over ' + this.cards[4].toString().slice(0, -1) + '\\'s';\n        this.descr = this.name + ', ' + type;\n      }\n\n      return this.cards.length >= 6;\n    }\n\n  }\n\n  class FourOfAKind extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Four of a Kind', game, canDisqualify);\n    }\n\n    solve() {\n      this.resetWildCards();\n\n      for (var i = 0; i < this.values.length; i++) {\n        if (this.getNumCardsByRank(i) === 4) {\n          this.cards = this.values[i] || [];\n\n          for (var j = 0; j < this.wilds.length && this.cards.length < 4; j++) {\n            var wild = this.wilds[j];\n\n            if (this.cards) {\n              wild.rank = this.cards[0].rank;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n\n          this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - 4));\n          break;\n        }\n      }\n\n      if (this.cards.length >= 4) {\n        if (this.game.noKickers) {\n          this.cards.length = 4;\n        }\n\n        this.descr = this.name + ', ' + this.cards[0].toString().slice(0, -1) + '\\'s';\n      }\n\n      return this.cards.length >= 4;\n    }\n\n  }\n\n  class FourWilds extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Four Wild Cards', game, canDisqualify);\n    }\n\n    solve() {\n      if (this.wilds.length === 4) {\n        this.cards = this.wilds;\n        this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - 4));\n      }\n\n      if (this.cards.length >= 4) {\n        if (this.game.noKickers) {\n          this.cards.length = 4;\n        }\n\n        this.descr = this.name;\n      }\n\n      return this.cards.length >= 4;\n    }\n\n  }\n\n  class ThreeOfAKindTwoPair extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Three of a Kind with Two Pair', game, canDisqualify);\n    }\n\n    solve() {\n      var cards;\n      this.resetWildCards();\n\n      for (var i = 0; i < this.values.length; i++) {\n        if (this.getNumCardsByRank(i) === 3) {\n          this.cards = this.values[i] || [];\n\n          for (var j = 0; j < this.wilds.length && this.cards.length < 3; j++) {\n            var wild = this.wilds[j];\n\n            if (this.cards) {\n              wild.rank = this.cards[0].rank;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n\n          break;\n        }\n      }\n\n      if (this.cards.length === 3) {\n        for (var i = 0; i < this.values.length; i++) {\n          var cards = this.values[i];\n\n          if (cards && this.cards[0].wildValue === cards[0].wildValue) {\n            continue;\n          }\n\n          if (this.cards.length > 5 && this.getNumCardsByRank(i) === 2) {\n            this.cards = this.cards.concat(cards || []);\n\n            for (var j = 0; j < this.wilds.length; j++) {\n              var wild = this.wilds[j];\n\n              if (wild.rank !== -1) {\n                continue;\n              }\n\n              if (cards) {\n                wild.rank = cards[0].rank;\n              } else if (this.cards[0].rank === values.length - 1 && this.game.wildStatus === 1) {\n                wild.rank = values.length - 2;\n              } else {\n                wild.rank = values.length - 1;\n              }\n\n              wild.wildValue = values[wild.rank];\n              this.cards.push(wild);\n            }\n\n            this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - 4));\n            break;\n          } else if (this.getNumCardsByRank(i) === 2) {\n            this.cards = this.cards.concat(cards);\n\n            for (var j = 0; j < this.wilds.length; j++) {\n              var wild = this.wilds[j];\n\n              if (wild.rank !== -1) {\n                continue;\n              }\n\n              if (cards) {\n                wild.rank = cards[0].rank;\n              } else if (this.cards[0].rank === values.length - 1 && this.game.wildStatus === 1) {\n                wild.rank = values.length - 2;\n              } else {\n                wild.rank = values.length - 1;\n              }\n\n              wild.wildValue = values[wild.rank];\n              this.cards.push(wild);\n            }\n          }\n        }\n      }\n\n      if (this.cards.length >= 7) {\n        var type = this.cards[0].toString().slice(0, -1) + '\\'s over ' + this.cards[3].toString().slice(0, -1) + '\\'s & ' + this.cards[5].value + '\\'s';\n        this.descr = this.name + ', ' + type;\n      }\n\n      return this.cards.length >= 7;\n    }\n\n  }\n\n  class FullHouse extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Full House', game, canDisqualify);\n    }\n\n    solve() {\n      var cards;\n      this.resetWildCards();\n\n      for (var i = 0; i < this.values.length; i++) {\n        if (this.getNumCardsByRank(i) === 3) {\n          this.cards = this.values[i] || [];\n\n          for (var j = 0; j < this.wilds.length && this.cards.length < 3; j++) {\n            var wild = this.wilds[j];\n\n            if (this.cards) {\n              wild.rank = this.cards[0].rank;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n\n          break;\n        }\n      }\n\n      if (this.cards.length === 3) {\n        for (i = 0; i < this.values.length; i++) {\n          cards = this.values[i];\n\n          if (cards && this.cards[0].wildValue === cards[0].wildValue) {\n            continue;\n          }\n\n          if (this.getNumCardsByRank(i) >= 2) {\n            this.cards = this.cards.concat(cards || []);\n\n            for (var j = 0; j < this.wilds.length; j++) {\n              var wild = this.wilds[j];\n\n              if (wild.rank !== -1) {\n                continue;\n              }\n\n              if (cards) {\n                wild.rank = cards[0].rank;\n              } else if (this.cards[0].rank === values.length - 1 && this.game.wildStatus === 1) {\n                wild.rank = values.length - 2;\n              } else {\n                wild.rank = values.length - 1;\n              }\n\n              wild.wildValue = values[wild.rank];\n              this.cards.push(wild);\n            }\n\n            this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - 5));\n            break;\n          }\n        }\n      }\n\n      if (this.cards.length >= 5) {\n        var type = this.cards[0].toString().slice(0, -1) + '\\'s over ' + this.cards[3].toString().slice(0, -1) + '\\'s';\n        this.descr = this.name + ', ' + type;\n      }\n\n      return this.cards.length >= 5;\n    }\n\n  }\n\n  class Flush extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Flush', game, canDisqualify);\n    }\n\n    solve() {\n      this.sfLength = 0;\n      this.resetWildCards();\n\n      for (var suit in this.suits) {\n        var cards = this.getCardsForFlush(suit, true);\n\n        if (cards.length >= this.game.sfQualify) {\n          this.cards = cards;\n          break;\n        }\n      }\n\n      if (this.cards.length >= this.game.sfQualify) {\n        this.descr = this.name + ', ' + this.cards[0].toString().slice(0, -1) + suit + ' High';\n        this.sfLength = this.cards.length;\n\n        if (this.cards.length < this.game.cardsInHand) {\n          this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - this.cards.length));\n        }\n      }\n\n      return this.cards.length >= this.game.sfQualify;\n    }\n\n  }\n\n  class Straight extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Straight', game, canDisqualify);\n    }\n\n    solve() {\n      var card, checkCards;\n      this.resetWildCards(); // There are still some games that count the wheel as second highest.\n      // These games do not have enough cards/wilds to make AKQJT and 5432A both possible.\n\n      if (this.game.wheelStatus === 1) {\n        this.cards = this.getWheel();\n\n        if (this.cards.length) {\n          var wildCount = 0;\n\n          for (var i = 0; i < this.cards.length; i++) {\n            card = this.cards[i];\n\n            if (card.value === this.game.wildValue) {\n              wildCount += 1;\n            }\n\n            if (card.rank === 0) {\n              card.rank = values.indexOf('A');\n              card.wildValue = 'A';\n\n              if (card.value === '1') {\n                card.value = 'A';\n              }\n            }\n          }\n\n          this.cards = this.cards.sort(Card.sort);\n\n          for (; wildCount < this.wilds.length && this.cards.length < this.game.cardsInHand; wildCount++) {\n            card = this.wilds[wildCount];\n            card.rank = values.indexOf('A');\n            card.wildValue = 'A';\n            this.cards.push(card);\n          }\n\n          this.descr = this.name + ', Wheel';\n          this.sfLength = this.sfQualify;\n\n          if (this.cards[0].value === 'A') {\n            this.cards = this.cards.concat(this.nextHighest().slice(1, this.game.cardsInHand - this.cards.length + 1));\n          } else {\n            this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - this.cards.length));\n          }\n\n          return true;\n        }\n\n        this.resetWildCards();\n      }\n\n      this.cards = this.getGaps(); // Now add the wild cards, if any, and set the appropriate ranks\n\n      for (var i = 0; i < this.wilds.length; i++) {\n        card = this.wilds[i];\n        checkCards = this.getGaps(this.cards.length);\n\n        if (this.cards.length === checkCards.length) {\n          // This is an \"open-ended\" straight, the high rank is the highest possible rank.\n          if (this.cards[0].rank < values.length - 1) {\n            card.rank = this.cards[0].rank + 1;\n            card.wildValue = values[card.rank];\n            this.cards.push(card);\n          } else {\n            card.rank = this.cards[this.cards.length - 1].rank - 1;\n            card.wildValue = values[card.rank];\n            this.cards.push(card);\n          }\n        } else {\n          // This is an \"inside\" straight, the high card doesn't change.\n          for (var j = 1; j < this.cards.length; j++) {\n            if (this.cards[j - 1].rank - this.cards[j].rank > 1) {\n              card.rank = this.cards[j - 1].rank - 1;\n              card.wildValue = values[card.rank];\n              this.cards.push(card);\n              break;\n            }\n          }\n        }\n\n        this.cards = this.cards.sort(Card.sort);\n      }\n\n      if (this.cards.length >= this.game.sfQualify) {\n        this.descr = this.name + ', ' + this.cards[0].toString().slice(0, -1) + ' High';\n        this.cards = this.cards.slice(0, this.game.cardsInHand);\n        this.sfLength = this.cards.length;\n\n        if (this.cards.length < this.game.cardsInHand) {\n          if (this.cards[this.sfLength - 1].rank === 0) {\n            this.cards = this.cards.concat(this.nextHighest().slice(1, this.game.cardsInHand - this.cards.length + 1));\n          } else {\n            this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - this.cards.length));\n          }\n        }\n      }\n\n      return this.cards.length >= this.game.sfQualify;\n    }\n    /**\n     * Get the number of gaps in the straight.\n     * @return {Array} Highest potential straight with fewest number of gaps.\n     */\n\n\n    getGaps(checkHandLength) {\n      var wildCards, cardsToCheck, i, card, gapCards, cardsList, gapCount, prevCard, diff;\n      var stripReturn = Hand.stripWilds(this.cardPool, this.game);\n      wildCards = stripReturn[0];\n      cardsToCheck = stripReturn[1];\n\n      for (i = 0; i < cardsToCheck.length; i++) {\n        card = cardsToCheck[i];\n\n        if (card.wildValue === 'A') {\n          cardsToCheck.push(new Card('1' + card.suit));\n        }\n      }\n\n      cardsToCheck = cardsToCheck.sort(Card.sort);\n\n      if (checkHandLength) {\n        i = cardsToCheck[0].rank + 1;\n      } else {\n        checkHandLength = this.game.sfQualify;\n        i = values.length;\n      }\n\n      gapCards = [];\n\n      for (; i > 0; i--) {\n        cardsList = [];\n        gapCount = 0;\n\n        for (var j = 0; j < cardsToCheck.length; j++) {\n          card = cardsToCheck[j];\n\n          if (card.rank > i) {\n            continue;\n          }\n\n          prevCard = cardsList[cardsList.length - 1];\n          diff = prevCard ? prevCard.rank - card.rank : i - card.rank;\n\n          if (diff === null) {\n            cardsList.push(card);\n          } else if (checkHandLength < gapCount + diff + cardsList.length) {\n            break;\n          } else if (diff > 0) {\n            cardsList.push(card);\n            gapCount += diff - 1;\n          }\n        }\n\n        if (cardsList.length > gapCards.length) {\n          gapCards = cardsList.slice();\n        }\n\n        if (this.game.sfQualify - gapCards.length <= wildCards.length) {\n          break;\n        }\n      }\n\n      return gapCards;\n    }\n\n    getWheel() {\n      var wildCards, cardsToCheck, i, card, wheelCards, wildCount, cardFound;\n      var stripReturn = Hand.stripWilds(this.cardPool, this.game);\n      wildCards = stripReturn[0];\n      cardsToCheck = stripReturn[1];\n\n      for (i = 0; i < cardsToCheck.length; i++) {\n        card = cardsToCheck[i];\n\n        if (card.wildValue === 'A') {\n          cardsToCheck.push(new Card('1' + card.suit));\n        }\n      }\n\n      cardsToCheck = cardsToCheck.sort(Card.sort);\n      wheelCards = [];\n      wildCount = 0;\n\n      for (i = this.game.sfQualify - 1; i >= 0; i--) {\n        cardFound = false;\n\n        for (var j = 0; j < cardsToCheck.length; j++) {\n          card = cardsToCheck[j];\n\n          if (card.rank > i) {\n            continue;\n          }\n\n          if (card.rank < i) {\n            break;\n          }\n\n          wheelCards.push(card);\n          cardFound = true;\n          break;\n        }\n\n        if (!cardFound) {\n          if (wildCount < wildCards.length) {\n            wildCards[wildCount].rank = i;\n            wildCards[wildCount].wildValue = values[i];\n            wheelCards.push(wildCards[wildCount]);\n            wildCount += 1;\n          } else {\n            return [];\n          }\n        }\n      }\n\n      return wheelCards;\n    }\n\n  }\n\n  class TwoThreeOfAKind extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Two Three Of a Kind', game, canDisqualify);\n    }\n\n    solve() {\n      this.resetWildCards();\n\n      for (var i = 0; i < this.values.length; i++) {\n        var cards = this.values[i];\n\n        if (this.cards.length > 0 && this.getNumCardsByRank(i) === 3) {\n          this.cards = this.cards.concat(cards || []);\n\n          for (var j = 0; j < this.wilds.length; j++) {\n            var wild = this.wilds[j];\n\n            if (wild.rank !== -1) {\n              continue;\n            }\n\n            if (cards) {\n              wild.rank = cards[0].rank;\n            } else if (this.cards[0].rank === values.length - 1 && this.game.wildStatus === 1) {\n              wild.rank = values.length - 2;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n\n          this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - 6));\n          break;\n        } else if (this.getNumCardsByRank(i) === 3) {\n          this.cards = this.cards.concat(cards);\n\n          for (var j = 0; j < this.wilds.length; j++) {\n            var wild = this.wilds[j];\n\n            if (wild.rank !== -1) {\n              continue;\n            }\n\n            if (cards) {\n              wild.rank = cards[0].rank;\n            } else if (this.cards[0].rank === values.length - 1 && this.game.wildStatus === 1) {\n              wild.rank = values.length - 2;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n        }\n      }\n\n      if (this.cards.length >= 6) {\n        var type = this.cards[0].toString().slice(0, -1) + '\\'s & ' + this.cards[3].toString().slice(0, -1) + '\\'s';\n        this.descr = this.name + ', ' + type;\n      }\n\n      return this.cards.length >= 6;\n    }\n\n  }\n\n  class ThreeOfAKind extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Three of a Kind', game, canDisqualify);\n    }\n\n    solve() {\n      this.resetWildCards();\n\n      for (var i = 0; i < this.values.length; i++) {\n        if (this.getNumCardsByRank(i) === 3) {\n          this.cards = this.values[i] || [];\n\n          for (var j = 0; j < this.wilds.length && this.cards.length < 3; j++) {\n            var wild = this.wilds[j];\n\n            if (this.cards) {\n              wild.rank = this.cards[0].rank;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n\n          this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - 3));\n          break;\n        }\n      }\n\n      if (this.cards.length >= 3) {\n        if (this.game.noKickers) {\n          this.cards.length = 3;\n        }\n\n        this.descr = this.name + ', ' + this.cards[0].toString().slice(0, -1) + '\\'s';\n      }\n\n      return this.cards.length >= 3;\n    }\n\n  }\n\n  class ThreePair extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Three Pair', game, canDisqualify);\n    }\n\n    solve() {\n      this.resetWildCards();\n\n      for (var i = 0; i < this.values.length; i++) {\n        var cards = this.values[i];\n\n        if (this.cards.length > 2 && this.getNumCardsByRank(i) === 2) {\n          this.cards = this.cards.concat(cards || []);\n\n          for (var j = 0; j < this.wilds.length; j++) {\n            var wild = this.wilds[j];\n\n            if (wild.rank !== -1) {\n              continue;\n            }\n\n            if (cards) {\n              wild.rank = cards[0].rank;\n            } else if (this.cards[0].rank === values.length - 1 && this.game.wildStatus === 1) {\n              wild.rank = values.length - 2;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n\n          this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - 6));\n          break;\n        } else if (this.cards.length > 0 && this.getNumCardsByRank(i) === 2) {\n          this.cards = this.cards.concat(cards || []);\n\n          for (var j = 0; j < this.wilds.length; j++) {\n            var wild = this.wilds[j];\n\n            if (wild.rank !== -1) {\n              continue;\n            }\n\n            if (cards) {\n              wild.rank = cards[0].rank;\n            } else if (this.cards[0].rank === values.length - 1 && this.game.wildStatus === 1) {\n              wild.rank = values.length - 2;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n        } else if (this.getNumCardsByRank(i) === 2) {\n          this.cards = this.cards.concat(cards);\n\n          for (var j = 0; j < this.wilds.length; j++) {\n            var wild = this.wilds[j];\n\n            if (wild.rank !== -1) {\n              continue;\n            }\n\n            if (cards) {\n              wild.rank = cards[0].rank;\n            } else if (this.cards[0].rank === values.length - 1 && this.game.wildStatus === 1) {\n              wild.rank = values.length - 2;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n        }\n      }\n\n      if (this.cards.length >= 6) {\n        var type = this.cards[0].toString().slice(0, -1) + '\\'s & ' + this.cards[2].toString().slice(0, -1) + '\\'s & ' + this.cards[4].toString().slice(0, -1) + '\\'s';\n        this.descr = this.name + ', ' + type;\n      }\n\n      return this.cards.length >= 6;\n    }\n\n  }\n\n  class TwoPair extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Two Pair', game, canDisqualify);\n    }\n\n    solve() {\n      this.resetWildCards();\n\n      for (var i = 0; i < this.values.length; i++) {\n        var cards = this.values[i];\n\n        if (this.cards.length > 0 && this.getNumCardsByRank(i) === 2) {\n          this.cards = this.cards.concat(cards || []);\n\n          for (var j = 0; j < this.wilds.length; j++) {\n            var wild = this.wilds[j];\n\n            if (wild.rank !== -1) {\n              continue;\n            }\n\n            if (cards) {\n              wild.rank = cards[0].rank;\n            } else if (this.cards[0].rank === values.length - 1 && this.game.wildStatus === 1) {\n              wild.rank = values.length - 2;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n\n          this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - 4));\n          break;\n        } else if (this.getNumCardsByRank(i) === 2) {\n          this.cards = this.cards.concat(cards);\n\n          for (var j = 0; j < this.wilds.length; j++) {\n            var wild = this.wilds[j];\n\n            if (wild.rank !== -1) {\n              continue;\n            }\n\n            if (cards) {\n              wild.rank = cards[0].rank;\n            } else if (this.cards[0].rank === values.length - 1 && this.game.wildStatus === 1) {\n              wild.rank = values.length - 2;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n        }\n      }\n\n      if (this.cards.length >= 4) {\n        if (this.game.noKickers) {\n          this.cards.length = 4;\n        }\n\n        var type = this.cards[0].toString().slice(0, -1) + '\\'s & ' + this.cards[2].toString().slice(0, -1) + '\\'s';\n        this.descr = this.name + ', ' + type;\n      }\n\n      return this.cards.length >= 4;\n    }\n\n  }\n\n  class OnePair extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'Pair', game, canDisqualify);\n    }\n\n    solve() {\n      this.resetWildCards();\n\n      for (var i = 0; i < this.values.length; i++) {\n        if (this.getNumCardsByRank(i) === 2) {\n          this.cards = this.cards.concat(this.values[i] || []);\n\n          for (var j = 0; j < this.wilds.length && this.cards.length < 2; j++) {\n            var wild = this.wilds[j];\n\n            if (this.cards) {\n              wild.rank = this.cards[0].rank;\n            } else {\n              wild.rank = values.length - 1;\n            }\n\n            wild.wildValue = values[wild.rank];\n            this.cards.push(wild);\n          }\n\n          this.cards = this.cards.concat(this.nextHighest().slice(0, this.game.cardsInHand - 2));\n          break;\n        }\n      }\n\n      if (this.cards.length >= 2) {\n        if (this.game.noKickers) {\n          this.cards.length = 2;\n        }\n\n        this.descr = this.name + ', ' + this.cards[0].toString().slice(0, -1) + '\\'s';\n      }\n\n      return this.cards.length >= 2;\n    }\n\n  }\n\n  class HighCard extends Hand {\n    constructor(cards, game, canDisqualify) {\n      super(cards, 'High Card', game, canDisqualify);\n    }\n\n    solve() {\n      this.cards = this.cardPool.slice(0, this.game.cardsInHand);\n\n      for (var i = 0; i < this.cards.length; i++) {\n        var card = this.cards[i];\n\n        if (this.cards[i].value === this.game.wildValue) {\n          this.cards[i].wildValue = 'A';\n          this.cards[i].rank = values.indexOf('A');\n        }\n      }\n\n      if (this.game.noKickers) {\n        this.cards.length = 1;\n      }\n\n      this.cards = this.cards.sort(Card.sort);\n      this.descr = this.cards[0].toString().slice(0, -1) + ' High';\n      return true;\n    }\n\n  }\n  /*\n   * Base class for handling Pai Gow Poker hands.\n   * House Way is in accordance with the MGM Grand Casino, Las Vegas NV.\n   * http://wizardofodds.com/games/pai-gow-poker/house-way/mgm/\n   * EXCEPTION: With Four of a Kind and S/F, preserve the S/F, just like Three of a Kind.\n   */\n\n\n  class PaiGowPokerHelper {\n    /*\n     * Constructor class.\n     * @param {Hand} hand Solved hand against Game 'paigowpokerfull'.\n     */\n    constructor(hand) {\n      this.baseHand = null;\n      this.hiHand = null;\n      this.loHand = null;\n      this.game = null;\n      this.loGame = new Game('paigowpokerlo');\n      this.hiGame = new Game('paigowpokerhi');\n\n      if (Array.isArray(hand)) {\n        this.baseHand = Hand.solve(hand, new Game('paigowpokerfull'));\n      } else {\n        this.baseHand = hand;\n      }\n\n      this.game = this.baseHand.game;\n    }\n    /*\n     * Set a full hand into high and low hands, according to House Way.\n     */\n\n\n    splitHouseWay() {\n      var hiCards, loCards;\n      var rank = this.game.handValues.length - this.baseHand.rank;\n      var handValue = this.game.handValues[rank];\n\n      if (handValue === FiveOfAKind) {\n        if (this.baseHand.cards[5].value === 'K' && this.baseHand.cards[6].value === 'K') {\n          loCards = this.baseHand.cards.slice(5, 7);\n          hiCards = this.baseHand.cards.slice(0, 5);\n        } else {\n          loCards = this.baseHand.cards.slice(0, 2);\n          hiCards = this.baseHand.cards.slice(2, 7);\n        }\n      } else if (handValue === FourOfAKindPairPlus) {\n        if (this.baseHand.cards[0].wildValue === 'A' && this.baseHand.cards[4].value !== 'K') {\n          hiCards = this.baseHand.cards.slice(0, 2);\n          loCards = this.baseHand.cards.slice(2, 4);\n          hiCards = hiCards.concat(this.baseHand.cards.slice(4, 7));\n        } else {\n          hiCards = this.baseHand.cards.slice(0, 4);\n          loCards = this.baseHand.cards.slice(4, 6);\n          hiCards.push(this.baseHand.cards[6]);\n        }\n      } else if (handValue === StraightFlush || handValue === Flush || handValue === Straight) {\n        var sfReturn;\n        var altGame = new Game('paigowpokeralt');\n        var altHand = Hand.solve(this.baseHand.cards, altGame);\n        var altRank = altGame.handValues.length - altHand.rank;\n\n        if (altGame.handValues[altRank] === FourOfAKind) {\n          sfReturn = this.getSFData(altHand.cards);\n          hiCards = sfReturn[0];\n          loCards = sfReturn[1];\n        } else if (altGame.handValues[altRank] === FullHouse) {\n          hiCards = altHand.cards.slice(0, 3);\n          loCards = altHand.cards.slice(3, 5);\n          hiCards = hiCards.concat(altHand.cards.slice(5, 7));\n        } else if (altGame.handValues[altRank] === ThreeOfAKind) {\n          sfReturn = this.getSFData(altHand.cards);\n          hiCards = sfReturn[0];\n          loCards = sfReturn[1];\n        } else if (altGame.handValues[altRank] === ThreePair) {\n          loCards = altHand.cards.slice(0, 2);\n          hiCards = altHand.cards.slice(2, 7);\n        } else if (altGame.handValues[altRank] === TwoPair) {\n          if (altHand.cards[0].rank < 6) {\n            if (altHand.cards[4].wildValue === 'A') {\n              hiCards = altHand.cards.slice(0, 4);\n              loCards = altHand.cards.slice(4, 6);\n              hiCards.push(altHand.cards[6]);\n            } else {\n              sfReturn = this.getSFData(altHand.cards);\n              hiCards = sfReturn[0];\n              loCards = sfReturn[1];\n            }\n          } else if (altHand.cards[0].rank < 10) {\n            if (altHand.cards[4].wildValue === 'A') {\n              hiCards = altHand.cards.slice(0, 4);\n              loCards = altHand.cards.slice(4, 6);\n              hiCards.push(altHand.cards[6]);\n            } else {\n              hiCards = altHand.cards.slice(0, 2);\n              loCards = altHand.cards.slice(2, 4);\n              hiCards = hiCards.concat(altHand.cards.slice(4, 7));\n            }\n          } else if (altHand.cards[0].wildValue !== 'A' && altHand.cards[2].rank < 6 && altHand.cards[4].wildValue === 'A') {\n            hiCards = altHand.cards.slice(0, 4);\n            loCards = altHand.cards.slice(4, 6);\n            hiCards.push(altHand.cards[6]);\n          } else {\n            hiCards = altHand.cards.slice(0, 2);\n            loCards = altHand.cards.slice(2, 4);\n            hiCards = hiCards.concat(altHand.cards.slice(4, 7));\n          }\n        } else if (altGame.handValues[altRank] === OnePair) {\n          if (altHand.cards[0].rank >= values.indexOf('T') && altHand.cards[0].rank <= values.indexOf('K') && altHand.cards[2].wildValue === 'A') {\n            var possibleSF = altHand.cards.slice(0, 2);\n            possibleSF = possibleSF.concat(altHand.cards.slice(3, 7));\n            sfReturn = this.getSFData(possibleSF);\n\n            if (sfReturn[0]) {\n              hiCards = sfReturn[0];\n              loCards = sfReturn[1];\n              loCards.push(altHand.cards[2]);\n            } else {\n              hiCards = altHand.cards.slice(0, 2);\n              loCards = altHand.cards.slice(2, 4);\n              hiCards = hiCards.concat(altHand.cards.slice(4, 7));\n            }\n          } else {\n            sfReturn = this.getSFData(altHand.cards.slice(2, 7));\n\n            if (sfReturn[0]) {\n              hiCards = sfReturn[0];\n              loCards = altHand.cards.slice(0, 2);\n            } else {\n              sfReturn = this.getSFData(altHand.cards);\n              hiCards = sfReturn[0];\n              loCards = sfReturn[1];\n            }\n          }\n        } else {\n          sfReturn = this.getSFData(altHand.cards);\n          hiCards = sfReturn[0];\n          loCards = sfReturn[1];\n        }\n      } else if (handValue === FourOfAKind) {\n        if (this.baseHand.cards[0].rank < 6) {\n          hiCards = this.baseHand.cards.slice(0, 4);\n          loCards = this.baseHand.cards.slice(4, 6);\n          hiCards.push(this.baseHand.cards[6]);\n        } else if (this.baseHand.cards[0].rank < 10 && this.baseHand.cards[4].wildValue === 'A') {\n          hiCards = this.baseHand.cards.slice(0, 4);\n          loCards = this.baseHand.cards.slice(4, 6);\n          hiCards.push(this.baseHand.cards[6]);\n        } else {\n          hiCards = this.baseHand.cards.slice(0, 2);\n          loCards = this.baseHand.cards.slice(2, 4);\n          hiCards = hiCards.concat(this.baseHand.cards.slice(4, 7));\n        }\n      } else if (handValue === TwoThreeOfAKind) {\n        loCards = this.baseHand.cards.slice(0, 2);\n        hiCards = this.baseHand.cards.slice(3, 6);\n        hiCards.push(this.baseHand.cards[2]);\n        hiCards.push(this.baseHand.cards[6]);\n      } else if (handValue === ThreeOfAKindTwoPair) {\n        hiCards = this.baseHand.cards.slice(0, 3);\n        loCards = this.baseHand.cards.slice(3, 5);\n        hiCards = hiCards.concat(this.baseHand.cards.slice(5, 7));\n      } else if (handValue === FullHouse) {\n        if (this.baseHand.cards[3].wildValue === '2' && this.baseHand.cards[5].wildValue === 'A' && this.baseHand.cards[6].wildValue === 'K') {\n          hiCards = this.baseHand.cards.slice(0, 5);\n          loCards = this.baseHand.cards.slice(5, 7);\n        } else {\n          hiCards = this.baseHand.cards.slice(0, 3);\n          loCards = this.baseHand.cards.slice(3, 5);\n          hiCards = hiCards.concat(this.baseHand.cards.slice(5, 7));\n        }\n      } else if (handValue === ThreeOfAKind) {\n        if (this.baseHand.cards[0].wildValue === 'A') {\n          hiCards = this.baseHand.cards.slice(0, 2);\n          loCards = this.baseHand.cards.slice(2, 4);\n          hiCards = hiCards.concat(this.baseHand.cards.slice(4, 7));\n        } else {\n          hiCards = this.baseHand.cards.slice(0, 3);\n          loCards = this.baseHand.cards.slice(3, 5);\n          hiCards = hiCards.concat(this.baseHand.cards.slice(5, 7));\n        }\n      } else if (handValue === ThreePair) {\n        loCards = this.baseHand.cards.slice(0, 2);\n        hiCards = this.baseHand.cards.slice(2, 7);\n      } else if (handValue === TwoPair) {\n        if (this.baseHand.cards[0].rank < 6) {\n          hiCards = this.baseHand.cards.slice(0, 4);\n          loCards = this.baseHand.cards.slice(4, 6);\n          hiCards.push(this.baseHand.cards[6]);\n        } else if (this.baseHand.cards[0].rank < 10) {\n          if (this.baseHand.cards[4].wildValue === 'A') {\n            hiCards = this.baseHand.cards.slice(0, 4);\n            loCards = this.baseHand.cards.slice(4, 6);\n            hiCards.push(this.baseHand.cards[6]);\n          } else {\n            hiCards = this.baseHand.cards.slice(0, 2);\n            loCards = this.baseHand.cards.slice(2, 4);\n            hiCards = hiCards.concat(this.baseHand.cards.slice(4, 7));\n          }\n        } else if (this.baseHand.cards[0].wildValue !== 'A' && this.baseHand.cards[2].rank < 6 && this.baseHand.cards[4].wildValue === 'A') {\n          hiCards = this.baseHand.cards.slice(0, 4);\n          loCards = this.baseHand.cards.slice(4, 6);\n          hiCards.push(this.baseHand.cards[6]);\n        } else {\n          hiCards = this.baseHand.cards.slice(0, 2);\n          loCards = this.baseHand.cards.slice(2, 4);\n          hiCards = hiCards.concat(this.baseHand.cards.slice(4, 7));\n        }\n      } else if (handValue === OnePair) {\n        hiCards = this.baseHand.cards.slice(0, 2);\n        loCards = this.baseHand.cards.slice(2, 4);\n        hiCards = hiCards.concat(this.baseHand.cards.slice(4, 7));\n      } else {\n        hiCards = [this.baseHand.cards[0]];\n        loCards = this.baseHand.cards.slice(1, 3);\n        hiCards = hiCards.concat(this.baseHand.cards.slice(3, 7));\n      }\n\n      this.hiHand = Hand.solve(hiCards, this.hiGame);\n      this.loHand = Hand.solve(loCards, this.loGame);\n    }\n    /*\n     * Determine the best possible Straight and/or Flush.\n     * @param  {Array} cards 5-7 Card objects to check.\n     * @return {Array} [hiCards, loCards] High and Low components, if any.\n     */\n\n\n    getSFData(cards) {\n      var hiCards, possibleLoCards, bestLoCards, bestHand;\n      var handsToCheck = [new StraightFlush(cards, new Game('paigowpokersf7')), new StraightFlush(cards, new Game('paigowpokersf6')), new StraightFlush(cards, this.game), new Flush(cards, new Game('paigowpokersf7')), new Flush(cards, new Game('paigowpokersf6')), new Flush(cards, this.game), new Straight(cards, new Game('paigowpokersf7')), new Straight(cards, new Game('paigowpokersf6')), new Straight(cards, this.game)];\n\n      for (var i = 0; i < handsToCheck.length; i++) {\n        var hand = handsToCheck[i];\n\n        if (hand.isPossible) {\n          if (hand.sfLength === 7) {\n            possibleLoCards = [hand.cards[0], hand.cards[1]];\n          } else if (hand.sfLength === 6) {\n            possibleLoCards = [hand.cards[0]];\n\n            if (cards.length > 6) {\n              possibleLoCards.push(hand.cards[6]);\n            }\n          } else if (cards.length > 5) {\n            possibleLoCards = [hand.cards[5]];\n\n            if (cards.length > 6) {\n              possibleLoCards.push(hand.cards[6]);\n            }\n          }\n\n          if (possibleLoCards) {\n            possibleLoCards = possibleLoCards.sort(Card.sort);\n\n            if (!bestLoCards || bestLoCards[0].rank < possibleLoCards[0].rank || bestLoCards.length > 1 && bestLoCards[0].rank === possibleLoCards[0].rank && bestLoCards[1].rank < possibleLoCards[1].rank) {\n              bestLoCards = possibleLoCards;\n              bestHand = hand;\n            }\n          } else if (!bestHand) {\n            bestHand = hand;\n            break;\n          }\n        }\n      }\n\n      if (bestHand) {\n        if (bestHand.sfLength === 7) {\n          hiCards = bestHand.cards.slice(2, 7);\n        } else if (bestHand.sfLength === 6) {\n          hiCards = bestHand.cards.slice(1, 6);\n        } else {\n          hiCards = bestHand.cards.slice(0, 5);\n        }\n      }\n\n      return [hiCards, bestLoCards];\n    }\n    /*\n     * Determine if the setting of the hands is valid. Hi must be higher than lo.\n     * @return {Boolean}\n     */\n\n\n    qualifiesValid() {\n      var compareHands = Hand.winners([this.hiHand, this.loHand]);\n      return !(compareHands.length === 1 && compareHands[0] === this.loHand);\n    }\n    /**\n     * Find which of two split hands is best, according to rules.\n     * @param  {PaiGowPokerHelper} player Player hand to evaluate. Must be set.\n     * @param  {PaiGowPokerHelper} banker Banker hand to evaluate. Must be set.\n     * @param  {int}               winner Winning party, if any.\n     *                                    Player = 1, Banker = -1, Push = 0\n     */\n\n\n    static winners(player, banker) {\n      if (!player.qualifiesValid()) {\n        if (banker.qualifiesValid()) {\n          return -1;\n        } // Probably shouldn't get here because the dealer must set house way.\n        // However, we'll still have it as a sanity check, just in case.\n\n\n        return 0;\n      }\n\n      if (!banker.qualifiesValid()) {\n        return 1;\n      }\n\n      var hiWinner = Hand.winners([player.hiHand, banker.hiHand]);\n      var loWinner = Hand.winners([player.loHand, banker.loHand]); // In Pai Gow Poker, Banker takes any equal valued hands.\n\n      if (hiWinner.length === 1 && hiWinner[0] === player.hiHand) {\n        if (loWinner.length === 1 && loWinner[0] === player.loHand) {\n          // Player wins both; player wins\n          return 1;\n        } // Player wins hi, Banker wins lo; push\n\n\n        return 0;\n      }\n\n      if (loWinner.length === 1 && loWinner[0] === player.loHand) {\n        // Banker wins hi, Player wins lo; push\n        return 0;\n      } // Banker wins both; banker wins\n\n\n      return -1;\n    }\n    /*\n     * Set a full hand into high and low hands, according to manual input.\n     * @param  {Array} hiHand       High hand to specify.\n     *                              Can also be {Hand} with game of 'paigowpokerhi'.\n     * @param  {Array} loHand       Low hand to specify.\n     *                              Can also be {Hand} with game of 'paigowpokerlo'.\n     * @return {PaiGowPokerHelper}  Object with split hands.\n     */\n\n\n    static setHands(hiHand, loHand) {\n      var fullHand = [];\n\n      if (Array.isArray(hiHand)) {\n        hiHand = Hand.solve(hiHand, new Game('paigowpokerhi'));\n      }\n\n      fullHand = fullHand.concat(hiHand.cardPool);\n\n      if (Array.isArray(loHand)) {\n        loHand = Hand.solve(loHand, new Game('paigowpokerlo'));\n      }\n\n      fullHand = fullHand.concat(loHand.cardPool);\n      var result = new PaiGowPokerHelper(fullHand);\n      result.hiHand = hiHand;\n      result.loHand = loHand;\n      return result;\n    }\n    /**\n     * Build and return PaiGowPokerHelper object with hands split House Way.\n     * @param  {Array} fullHand    Array of cards (['Ad', '3c', 'Th', ...]).\n     *                             Can also be {Hand} with game of 'paigowpokerfull'.\n     * @return {PaiGowPokerHelper} Object with split hands.\n     */\n\n\n    static solve(fullHand) {\n      var result = new PaiGowPokerHelper(fullHand = fullHand || ['']);\n      result.splitHouseWay();\n      return result;\n    }\n\n  }\n\n  var gameRules = {\n    'standard': {\n      'cardsInHand': 5,\n      'handValues': [StraightFlush, FourOfAKind, FullHouse, Flush, Straight, ThreeOfAKind, TwoPair, OnePair, HighCard],\n      'wildValue': null,\n      'wildStatus': 1,\n      'wheelStatus': 0,\n      'sfQualify': 5,\n      'lowestQualified': null,\n      \"noKickers\": false\n    },\n    'jacksbetter': {\n      'cardsInHand': 5,\n      'handValues': [StraightFlush, FourOfAKind, FullHouse, Flush, Straight, ThreeOfAKind, TwoPair, OnePair, HighCard],\n      'wildValue': null,\n      'wildStatus': 1,\n      'wheelStatus': 0,\n      'sfQualify': 5,\n      'lowestQualified': ['Jc', 'Jd', '4h', '3s', '2c'],\n      \"noKickers\": true\n    },\n    'joker': {\n      'cardsInHand': 5,\n      'handValues': [NaturalRoyalFlush, FiveOfAKind, WildRoyalFlush, StraightFlush, FourOfAKind, FullHouse, Flush, Straight, ThreeOfAKind, TwoPair, HighCard],\n      'wildValue': 'O',\n      'wildStatus': 1,\n      'wheelStatus': 0,\n      'sfQualify': 5,\n      'lowestQualified': ['4c', '3d', '3h', '2s', '2c'],\n      \"noKickers\": true\n    },\n    'deuceswild': {\n      'cardsInHand': 5,\n      'handValues': [NaturalRoyalFlush, FourWilds, WildRoyalFlush, FiveOfAKind, StraightFlush, FourOfAKind, FullHouse, Flush, Straight, ThreeOfAKind, HighCard],\n      'wildValue': '2',\n      'wildStatus': 1,\n      'wheelStatus': 0,\n      'sfQualify': 5,\n      'lowestQualified': ['5c', '4d', '3h', '3s', '3c'],\n      \"noKickers\": true\n    },\n    'threecard': {\n      'cardsInHand': 3,\n      'handValues': [StraightFlush, ThreeOfAKind, Straight, Flush, OnePair, HighCard],\n      'wildValue': null,\n      'wildStatus': 1,\n      'wheelStatus': 0,\n      'sfQualify': 3,\n      'lowestQualified': ['Qh', '3s', '2c'],\n      \"noKickers\": false\n    },\n    'fourcard': {\n      'cardsInHand': 4,\n      'handValues': [FourOfAKind, StraightFlush, ThreeOfAKind, Flush, Straight, TwoPair, OnePair, HighCard],\n      'wildValue': null,\n      'wildStatus': 1,\n      'wheelStatus': 0,\n      'sfQualify': 4,\n      'lowestQualified': null,\n      \"noKickers\": true\n    },\n    'fourcardbonus': {\n      'cardsInHand': 4,\n      'handValues': [FourOfAKind, StraightFlush, ThreeOfAKind, Flush, Straight, TwoPair, OnePair, HighCard],\n      'wildValue': null,\n      'wildStatus': 1,\n      'wheelStatus': 0,\n      'sfQualify': 4,\n      'lowestQualified': ['Ac', 'Ad', '3h', '2s'],\n      \"noKickers\": true\n    },\n    'paigowpokerfull': {\n      'cardsInHand': 7,\n      'handValues': [FiveOfAKind, FourOfAKindPairPlus, StraightFlush, Flush, Straight, FourOfAKind, TwoThreeOfAKind, ThreeOfAKindTwoPair, FullHouse, ThreeOfAKind, ThreePair, TwoPair, OnePair, HighCard],\n      'wildValue': 'O',\n      'wildStatus': 0,\n      'wheelStatus': 1,\n      'sfQualify': 5,\n      'lowestQualified': null\n    },\n    'paigowpokeralt': {\n      'cardsInHand': 7,\n      'handValues': [FourOfAKind, FullHouse, ThreeOfAKind, ThreePair, TwoPair, OnePair, HighCard],\n      'wildValue': 'O',\n      'wildStatus': 0,\n      'wheelStatus': 1,\n      'sfQualify': 5,\n      'lowestQualified': null\n    },\n    'paigowpokersf6': {\n      'cardsInHand': 7,\n      'handValues': [StraightFlush, Flush, Straight],\n      'wildValue': 'O',\n      'wildStatus': 0,\n      'wheelStatus': 1,\n      'sfQualify': 6,\n      'lowestQualified': null\n    },\n    'paigowpokersf7': {\n      'cardsInHand': 7,\n      'handValues': [StraightFlush, Flush, Straight],\n      'wildValue': 'O',\n      'wildStatus': 0,\n      'wheelStatus': 1,\n      'sfQualify': 7,\n      'lowestQualified': null\n    },\n    'paigowpokerhi': {\n      'cardsInHand': 5,\n      'handValues': [FiveOfAKind, StraightFlush, FourOfAKind, FullHouse, Flush, Straight, ThreeOfAKind, TwoPair, OnePair, HighCard],\n      'wildValue': 'O',\n      'wildStatus': 0,\n      'wheelStatus': 1,\n      'sfQualify': 5,\n      'lowestQualified': null\n    },\n    'paigowpokerlo': {\n      'cardsInHand': 2,\n      'handValues': [OnePair, HighCard],\n      'wildValue': 'O',\n      'wildStatus': 0,\n      'wheelStatus': 1,\n      'sfQualify': 5,\n      'lowestQualified': null\n    }\n  };\n  /**\n   * Base Game class that defines the rules of the game.\n   */\n\n  class Game {\n    constructor(descr) {\n      this.descr = descr;\n      this.cardsInHand = 0;\n      this.handValues = [];\n      this.wildValue = null;\n      this.wildStatus = 0;\n      this.wheelStatus = 0;\n      this.sfQualify = 5;\n      this.lowestQualified = null;\n      this.noKickers = null; // Set values based on the game rules.\n\n      if (!this.descr || !gameRules[this.descr]) {\n        this.descr = 'standard';\n      }\n\n      this.cardsInHand = gameRules[this.descr]['cardsInHand'];\n      this.handValues = gameRules[this.descr]['handValues'];\n      this.wildValue = gameRules[this.descr]['wildValue'];\n      this.wildStatus = gameRules[this.descr]['wildStatus'];\n      this.wheelStatus = gameRules[this.descr]['wheelStatus'];\n      this.sfQualify = gameRules[this.descr]['sfQualify'];\n      this.lowestQualified = gameRules[this.descr]['lowestQualified'];\n      this.noKickers = gameRules[this.descr]['noKickers'];\n    }\n\n  }\n\n  function exportToGlobal(global) {\n    global.Card = Card;\n    global.Hand = Hand;\n    global.Game = Game;\n    global.RoyalFlush = RoyalFlush;\n    global.NaturalRoyalFlush = NaturalRoyalFlush;\n    global.WildRoyalFlush = WildRoyalFlush;\n    global.FiveOfAKind = FiveOfAKind;\n    global.StraightFlush = StraightFlush;\n    global.FourOfAKindPairPlus = FourOfAKindPairPlus;\n    global.FourOfAKind = FourOfAKind;\n    global.FourWilds = FourWilds;\n    global.TwoThreeOfAKind = TwoThreeOfAKind;\n    global.ThreeOfAKindTwoPair = ThreeOfAKindTwoPair;\n    global.FullHouse = FullHouse;\n    global.Flush = Flush;\n    global.Straight = Straight;\n    global.ThreeOfAKind = ThreeOfAKind;\n    global.ThreePair = ThreePair;\n    global.TwoPair = TwoPair;\n    global.OnePair = OnePair;\n    global.HighCard = HighCard;\n    global.PaiGowPokerHelper = PaiGowPokerHelper;\n  } // Export the classes for node.js use.\n\n\n  if (typeof exports !== 'undefined') {\n    exportToGlobal(exports);\n  } // Add the classes to the window for browser use.\n\n\n  if (typeof window !== 'undefined') {\n    exportToGlobal(window);\n  }\n})();","\n\nexport default class Check {\n    preflopCheck() {\n        if (window.betRound === 0 && window.players[0].currentBet === window.players[1].currentBet) {\n            // window.betRound += 1;\n            window.turnCount += 1;\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n        } \n    }\n\n    postflopCheck() {\n        if (window.flopCount === 0 && window.betRound === 1 && window.players[0].currentBet === window.players[0].currentBet) {\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n            window.flopCount += 1;\n            \n        } else if (window.flopCount === 1 && window.betRound === 1 && window.players[0].currentBet === window.players[1].currentBet) {\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n            window.turnCount += 1;\n            window.betRound += 1;\n            window.flopCount += 1;\n            window.turnBetCount = 1;\n            \n        }\n    }\n\n    postTurnCheck() {\n        if (window.betRound === 3 && window.turnBetCount === 0 && window.players[0].currentBet === window.players[1].currentBet) {\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n            window.turnBetCount += 1;\n            \n        } else if (window.betRound === 3 && window.turnBetCount === 1 && window.players[0].currentBet === window.players[0].currentBet) {\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n            window.turnCount += 1;\n            \n        }\n    }\n\n    postRiverCheck() {\n        if (window.betRound === 4 && window.riverBetCount === 0 && window.players[0].currentBet === window.players[1].currentBet) {\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n            window.riverBetCount += 1;\n            \n        } else if (window.betRound === 4 && window.riverBetCount === 1 && window.players[0].currentBet === window.players[1].currentBet) {\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n            window.betRound += 1;\n        }\n    }\n\n}","export default class NextCard {\n\n    constructor() {\n        window.middleCards = [];\n    }\n\n    postFlop() {\n        if (window.turnCount === 1 && window.player1.currentBet === window.player2.currentBet) {\n            document.getElementById('philbet').innerHTML = \"\"\n            document.getElementById('mikebet').innerHTML = \"\"\n            let c = window.deck.cards.slice(0,3);\n            window.middleCards = window.middleCards.concat(c);\n        \n            for (let i = 0; i < window.players.length; i++) {\n                window.players[i].cardPool.push(window.deck.cards[0])\n                window.players[i].cardPool.push(window.deck.cards[1])\n                window.players[i].cardPool.push(window.deck.cards[2])\n            }\n\n            window.deck.cards = window.deck.cards.slice(3);\n            window.betRound += 1;\n            window.turnCount += 1;\n            window.styledCards = [];\n            let card;\n\n            for (let i = 0; i < window.middleCards.length; i++) {\n                if (window.middleCards[i][1] === 'd') {\n                    card = window.middleCards[i];\n                    card = card[0] + '🔹';\n                    // card.style.color = \"blue\"\n                    window.styledCards.push(card);\n                } else if (window.middleCards[i][1] === 's') {\n                    card = window.middleCards[i];\n                    card = card[0] + '♠️';\n                    // card.style.color = \"black\"\n                    window.styledCards.push(card);\n                } else if (window.middleCards[i][1] === 'h') {\n                    card = window.middleCards[i];\n                    card = card[0] + '❤️';\n                    // card.style.color = \"red\"\n                    window.styledCards.push(card);\n                } else if (window.middleCards[i][1] === 'c') {\n                    card = window.middleCards[i];\n                    card = card[0] + '🍀';\n                    // card.style.color = \"green\"\n                    window.styledCards.push(card);\n                }\n            }\n            window.player1.currentBet = 0;\n            window.player2.currentBet = 0;\n            d3.select(\"#flopcard-anchor\").selectAll(\"p\")\n                .data(window.styledCards)\n                .enter()\n                .append(\"p\")\n                .text(function (d) { return d })\n                .attr(\"class\", \"flopcards\")\n            \n            // document.getElementById('raise2x').innerHTML = \"Raise to 20\"\n\n            d3.selectAll(\".mikecurrentbet\").remove()\n            d3.selectAll(\".philcurrentbet\").remove()\n            \n            \n        }\n    }\n\n    postTurn() {\n        if (window.betRound === 2 && window.players[0].currentBet === window.players[1].currentBet && window.turnCount === 3) {\n            let card = window.deck.cards[0];\n            let c = card;\n\n            if (card[1] === 'd') {\n                card = card[0] + '🔹';\n                window.styledCards.push(card);\n            } else if (card[1] === 's') {\n                card = card[0] + '♠️';\n                window.styledCards.push(card);\n            } else if (card[1] === 'h') {\n                card = card[0] + '❤️';\n                window.styledCards.push(card);\n            } else if (card[1] === 'c') {\n                card = card[0] + '🍀';\n                window.styledCards.push(card);\n            }\n            window.middleCards[3] = c;\n            for (let i = 0; i < window.players.length; i++) {\n                window.players[i].cardPool.push(c)\n            }\n            d3.select(\"#flopcard-anchor\").selectAll(\"p\")\n                .data(window.styledCards)\n                .enter()\n                .append(\"p\")\n                .text(function (d) { return d })\n                .attr(\"class\", \"flopcards\")\n\n            window.player1.currentBet = 0;\n            window.player2.currentBet = 0;\n            window.betRound += 1;\n            window.deck.cards.slice(1);\n            window.flopCount = 0;\n            window.turnBetCount = 0;\n            document.getElementById('raise2x').innerHTML = \"Raise 2x\"\n            document.getElementById('philbet').innerHTML = \"\"\n            document.getElementById('mikebet').innerHTML = \"\"\n            d3.selectAll(\".mikecurrentbet\").remove()\n            d3.selectAll(\".philcurrentbet\").remove()\n        }\n    }\n\n    postRiver() {\n        if (window.betRound === 3 && window.players[0].currentBet === window.players[1].currentBet && window.turnCount === 4) {\n            \n            // window.deck.cards.slice(1);\n            let c = window.deck.cards[1];\n            let card = window.deck.cards[1];\n            window.middleCards[4] = c;\n\n            if (card[1] === 'd') {\n                card = card[0] + '🔹';\n                window.styledCards.push(card);\n            } else if (card[1] === 's') {\n                card = card[0] + '♠️';\n                window.styledCards.push(card);\n            } else if (card[1] === 'h') {\n                card = card[0] + '❤️';\n                window.styledCards.push(card);\n            } else if (card[1] === 'c') {\n                card = card[0] + '☘️';\n                window.styledCards.push(card);\n            }\n\n            for (let i = 0; i < window.players.length; i++) {\n                window.players[i].cardPool.push(c)\n            }\n\n            d3.select(\"#flopcard-anchor\").selectAll(\"p\")\n                .data(window.styledCards)\n                .enter()\n                .append(\"p\")\n                .text(function (d) { return d })\n                .attr(\"class\", \"flopcards\")\n\n            window.betRound += 1;\n            window.player1.currentBet = 0\n            window.player2.currentBet = 0\n            document.getElementById('raise2x').innerHTML = \"Raise 2x\"\n            document.getElementById('philbet').innerHTML = \"\"\n            document.getElementById('mikebet').innerHTML = \"\"\n            d3.selectAll(\".mikecurrentbet\").remove()\n            d3.selectAll(\".philcurrentbet\").remove()\n        }\n    }\n}","export default class Raise {\n    preflopTwoTimesRaise() {\n        if (window.betRound === 0){\n            if (window.players[0] === window.player1) {\n                window.player1.chips -= window.player2.currentBet * 2 - window.player1.currentBet;\n                window.pot.chips += window.player2.currentBet * 2 - window.player1.currentBet;\n                window.player1.currentBet = window.player2.currentBet * 2;\n                window.player1.deadmoney += window.player2.currentBet * 2 - window.player1.deadmoney;\n                let first = window.players[0];\n                window.players.shift();\n                window.players.push(first);\n            } else if (window.players[0] === window.player2) {\n                window.player2.chips -= window.player1.currentBet * 2 - window.player2.currentBet;\n                window.pot.chips += window.player1.currentBet * 2 - window.player2.currentBet;\n                window.player2.currentBet = window.player1.currentBet * 2;\n                window.player2.deadmoney += window.player1.currentBet * 2 - window.player2.deadmoney;\n                let first = window.players[0];\n                window.players.shift();\n                window.players.push(first);\n            }\n        \n        window.firstBet += 1;\n        }\n    }\n\n    postflopRaise() {\n        if (window.betRound === 1 && window.players[1].currentBet === 0) {\n            window.players[0].chips -= 20;\n            window.pot.chips += 20;\n            window.players[0].deadmoney += 20;\n            window.players[0].currentBet = 20;\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n        } else if (window.betRound === 1 && window.players[1].currentBet > 0) {\n            window.players[0].chips -= window.players[1].currentBet * 2 - window.players[0].currentBet;\n            window.pot.chips += window.players[1].currentBet * 2 - window.players[0].currentBet;\n            window.players[0].deadmoney += window.players[1].currentBet * 2 - window.players[0].currentBet;\n            window.players[0].currentBet = window.players[1].currentBet * 2;\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n        }\n    }\n\n    postTurnRaise() {\n        if (window.betRound === 3 && window.players[1].currentBet === 0) {\n            window.players[0].chips -= 20;\n            window.pot.chips += 20;\n            window.players[0].deadmoney += 20;\n            window.players[0].currentBet = 20;\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n            window.turnBetCount += 1;\n        } else if (window.betRound === 3 && window.players[1].currentBet > 0) {\n            window.players[0].chips -= window.players[1].currentBet * 2 - window.players[0].currentBet;\n            window.pot.chips += window.players[1].currentBet * 2 - window.players[0].currentBet;\n            window.players[0].deadmoney += window.players[1].currentBet * 2 - window.players[0].currentBet;\n            window.players[0].currentBet = window.players[1].currentBet * 2;\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n        }\n    }\n\n    postRiverRaise() {\n        if (window.betRound === 4 && window.players[1].currentBet === 0) {\n            window.players[0].chips -= 20;\n            window.pot.chips += 20;\n            window.players[0].deadmoney += 20;\n            window.players[0].currentBet = 20;\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n        } else if (window.betRound === 4 && window.players[1].currentBet > 0) {\n            window.players[0].chips -= window.players[1].currentBet * 2 - window.players[0].currentBet;\n            window.pot.chips += window.players[1].currentBet * 2 - window.players[0].currentBet;\n            window.players[0].deadmoney += window.players[1].currentBet * 2 - window.players[0].currentBet;\n            window.players[0].currentBet = window.players[1].currentBet * 2;\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n        }\n    }\n}","export default class SolveHand {\n    solveHands() {\n        var Hand = require(\"pokersolver\").Hand;\n        let playerHands = [];\n        \n\n        if (window.betRound === 5) {\n            let rez1 = Hand.solve(window.player1.cardPool);\n            playerHands.push(rez1);\n            let rez2 = Hand.solve(window.player2.cardPool);\n            playerHands.push(rez2);\n\n            window.winner = Hand.winners(playerHands);\n            this.setCardPool();\n            this.returnWinner();\n            let first = window.players[0];\n            window.players.shift();\n            window.players.push(first);\n\n            let player2cards = [];\n            let card1;\n            let card2;\n            let card;\n            for (let i = 0; i < 2; i++) {\n                card1 = window.player2.holecards[i];\n                \n                if (card1[1] === 'd') {\n                    card = card1[0] + '🔹'\n                    player2cards.push(card)\n                } else if (card1[1] === 's') {\n                    card = card1[0] + '♠️'\n                    player2cards.push(card)\n                } else if (card1[1] === 'h') {\n                    card = card1[0] + '❤️'\n                    player2cards.push(card)\n                } else if (card1[1] === 'c') {\n                    card = card1[0] + '🍀'\n                    player2cards.push(card)\n                }\n            }\n            // window.dealCount = 0;\n            // window.betRound = 0;\n            // window.count = 0;\n            // window.firstBet = 0;\n            // window.turnCount = 0;\n            // window.flopCount = 0;\n            // window.turnBetCount = 0;\n            // window.riverBetCount = 0;\n            // window.middleCards = [];\n            // window.styledCards = [];\n            // window.player1.holecards = [];\n            // window.player2.holecards = [];\n            // window.player1.cardPool = [];\n            // window.player2.cardPool = [];\n            // window.deck.cards = [];\n            \n\n            \n            d3.selectAll(\".player2cards\").remove();\n            d3.select(\"#player2carddiv\").selectAll(\"p\")\n            .data(player2cards)\n            .enter()\n            .append('p')\n            .text(function (d) { return d})\n            .attr(\"class\", 'player2cardsrez')\n\n            d3.select(\"#pokertable\").selectAll('h3')\n                .data(window.winningPlayerName)\n                .enter()\n                .append(\"h3\")\n                .text(function (d) { return d + \" wins pot with \" + window.winner[0].descr })\n                .attr(\"class\", \"winnerName\")\n\n\n            window.dealCount = 0;\n            window.dealCountTurn = 0;\n            window.betRound = 0;\n            window.count = 0;\n            window.firstBet = 0;\n            window.turnCount = 0;\n            window.flopCount = 0;\n            window.turnBetCount = 0;\n            window.riverBetCount = 0;\n            window.middleCards = [];\n            window.styledCards = [];\n            window.player1.holecards = [];\n            window.player2.holecards = [];\n            window.player1.cardPool = [];\n            window.player2.cardPool = [];\n            window.deck.cards = [];\n            player2cards = [];\n            document.getElementById(\"whos-turn\").innerHTML = \"\"\n\n\n        }\n\n    }\n\n    resetHand() {\n        if (window.players.length === 1) {\n            d3.selectAll(\".player2cards\").remove();\n            window.dealCount = 0;\n            window.betRound = 0;\n            window.count = 0;\n            window.firstBet = 0;\n            window.turnCount = 0;\n            window.flopCount = 0;\n            window.turnBetCount = 0;\n            window.riverBetCount = 0;\n            window.middleCards = [];\n            window.styledCards = [];\n            window.player1.holecards = [];\n            window.player2.holecards = [];\n            window.player1.cardPool = [];\n            window.player2.cardPool = [];\n            window.deck.cards = [];\n            window.players[0].chips += window.pot.chips;\n            window.pot.chips = 0;\n        }\n    }\n\n    setCardPool() {\n        window.winningHand = [];\n        let val;\n        let suit;\n        let card;\n        for (let i = 0; i < 7; i++) {\n            val = window.winner[0].cardPool[i].value;\n            suit = window.winner[0].cardPool[i].suit;\n            card = val.concat(suit)\n            window.winningHand.push(card)\n        }\n\n        window.winningHand = window.winningHand.sort();\n        // console.log(window.winningHand)\n    }\n\n    returnWinner() {\n        for (let i = 0; i < players.length; i++) {\n            if (JSON.stringify(window.players[i].cardPool.sort()) === JSON.stringify(window.winningHand)) {\n                window.players[i].chips += window.pot.chips;\n                window.pot.chips = 0;\n                window.winningPlayerName = [window.players[i].name];\n            }\n        }\n\n    }\n}","export default class Fold {\n    // resetVariables() {\n    //     window.dealCount = 0;\n    //     window.betRound = 0;\n    //     window.count = 0;\n    //     window.firstBet = 0;\n    //     window.turnCount = 0;\n    //     window.flopCount = 0;\n    //     window.turnBetCount = 0;\n    //     window.riverBetCount = 0;\n    //     window.middleCards = [];\n    //     window.styledCards = [];\n    //     window.player1.holecards = [];\n    //     window.player2.holecards = [];\n    //     window.player1.cardPool = [];\n    //     window.player2.cardPool = [];\n    //     window.deck.cards = [];\n    //     let first = window.players[0];\n    //     window.players.shift();\n    //     window.players.push(first);\n    //     window.players[0].chips += window.pot.chips;\n    //     window.pot.chips = 0;\n    // }\n}","import Deck from './deck';\nimport Preflop from './preflop';\nimport Call from './calling';\nimport Check from './check';\nimport NextCard from './nextcard';\nimport Raise from './raise';\nimport SolveHand from './result';\nimport Fold from './fold';\n\nconst deck = require('./deck')\nconst cards = require('./preflop');\nconst call = require('./calling');\n\nexport default class Game {\n    constructor() {\n        this.deck = new Deck();\n        this.cards = new Preflop();\n        this.calling = new Call();\n        this.checking = new Check();\n        this.nextCard = new NextCard();\n        this.raising = new Raise();\n        this.solve = new SolveHand();\n        this.folding = new Fold();\n    }\n\n    createGame() {\n        this.cards.startScoreboard();\n        // d3.selectAll(\".mikecurrentbet\").remove()\n        // d3.select('.MikeM').selectAll('p')\n        //     .data(window.player1Bet)\n        //     .enter()\n        //     .append(\"p\")\n        //     .text(function (d) { return \"current bet: \" + d.currentBet })\n        //     .attr(\"class\", 'mikecurrentbet')\n        // d3.selectAll(\".philcurrentbet\").remove()\n        // d3.select('.phil').selectAll('p')\n        //     .data(window.player1Bet)\n        //     .enter()\n        //     .append(\"p\")\n        //     .text(function (d) { return \"current bet: \" + d.currentBet })\n        //     .attr(\"class\", 'philcurrentbet')\n    }\n\n    call() {\n        this.calling.preflopCallFive();\n        this.calling.preflopCall();\n        this.calling.postflopCall();\n        this.calling.postTurnCall();\n        this.calling.postRiverCall();\n        this.nextCard.postFlop();\n        this.nextCard.postTurn();\n        this.nextCard.postRiver();\n        this.solve.solveHands();\n        this.cards.startScoreboard();\n        document.getElementById('call').innerHTML = \"Call\"\n        // d3.selectAll(\".mikecurrentbet\").remove()\n        // d3.select('.MikeM').selectAll('p')\n        //     .data(window.player1Bet)\n        //     .enter()\n        //     .append(\"p\")\n        //     .text(function (d) { return \"current bet: \" + d.currentBet })\n        //     .attr(\"class\", 'mikecurrentbet')\n    }\n\n    check() {\n        this.checking.preflopCheck();\n        this.checking.postflopCheck();\n        this.checking.postTurnCheck();\n        this.checking.postRiverCheck();\n        this.nextCard.postFlop();\n        this.nextCard.postTurn();\n        this.nextCard.postRiver();\n        this.solve.solveHands();\n    }\n\n    raiseTwoTimes() {\n        this.raising.preflopTwoTimesRaise();\n        this.raising.postflopRaise();\n        this.raising.postTurnRaise();\n        this.raising.postRiverRaise();\n        this.cards.startScoreboard();\n        // d3.selectAll(\".mikecurrentbet\").remove()\n        // d3.select('.MikeM').selectAll('p')\n        //     .data(window.player1Bet)\n        //     .enter()\n        //     .append(\"p\")\n        //     .text(function (d) { return \"current bet: \" + d.currentBet })\n        //     .attr(\"class\", 'mikecurrentbet')\n        \n    }\n\n    fold() {\n        let first = window.players[0];\n        window.players.shift()\n        this.solve.resetHand();\n        this.solve.solveHands();\n        window.players.push(first)\n        this.cards.startScoreboard();\n        // d3.selectAll(\".mikecurrentbet\").remove()\n        // d3.select('.MikeM').selectAll('p')\n        //     .data(window.player1Bet)\n        //     .enter()\n        //     .append(\"p\")\n        //     .text(function (d) { return \"current bet: \" + d.currentBet })\n        //     .attr(\"class\", 'mikecurrentbet')\n    }\n\n    computer() {\n        let ele = Math.floor(Math.random() * 10);\n        let last = window.player1.currentBet;\n        debugger\n        if (last > window.player2.currentBet && window.players[0] === window.player2) {\n            if (ele <= 1) {\n                this.fold()\n                document.getElementById('philbet').innerHTML = \"fold\"\n                window.dealCountTurn = 0\n                document.getElementById(\"whos-turn\").innerHTML = \"\"\n            } else if (ele <= 6 && ele > 1) {\n                document.getElementById('philbet').innerHTML = \"call \" + window.player1.currentBet\n                this.call()\n            } else if (ele > 6) {\n                this.raiseTwoTimes()\n                document.getElementById('philbet').innerHTML = \"raise to \" + (window.player1.currentBet * 2)\n                document.getElementById('call').innerHTML = \"Call\"\n            }\n            // d3.selectAll(\".philcurrentbet\").remove()\n            // d3.select('.phil').selectAll('p')\n            //     .data(window.player1Bet)\n            //     .enter()\n            //     .append(\"p\")\n            //     .text(function (d) { return \"current bet: \" + d.currentBet })\n            //     .attr(\"class\", 'philcurrentbet')\n        } else if ((last === 0 || last === window.player2.currentBet)  && window.players[0] === window.player2) {\n            if (ele <= 5) {\n                this.check()\n                document.getElementById('philbet').innerHTML = 'check'\n            } else if (ele > 5) {\n                this.raiseTwoTimes()\n                document.getElementById('raise2x').innerHTML = \"Raise to \" + window.player2.currentBet * 2\n                document.getElementById('philbet').innerHTML = 'raise to 20'\n                // document.getElementById(\"call\").innerHTML = \"Call \" + window.player2.currentBet\n            }\n            // d3.selectAll(\".philcurrentbet\").remove()\n            // d3.select('.phil').selectAll('p')\n            //     .data(window.player1Bet)\n            //     .enter()\n            //     .append(\"p\")\n            //     .text(function (d) { return \"current bet: \" + d.currentBet })\n            //     .attr(\"class\", 'philcurrentbet')\n        }\n    }\n}","import Deck from '../javascript/js-new/deck'\nimport Cards from '../javascript/js-new/preflop';\nimport Game from '../javascript/js-new/game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const deal = new Cards();\n    const game = new Game();\n    game.createGame();\n\n    window.turnCount = 0;\n    window.flopCount = 0;\n    window.turnBetCount = 0;\n    window.riverBetCount = 0;\n    window.dealCountTurn = 0;\n    let playerShift = 0;\n    // document.getElementById('currBet').innerHTML = \"current Bet:\" + window.player1.currentBet;\n    \n    document.getElementById('player2chips').innerHTML = window.player2.chips;\n    document.getElementById('player1chips').innerHTML = window.player1.chips;\n    \n    document.getElementById('hands').onclick = function dealTheCards() {\n        if (window.dealCountTurn === 0) {\n            window.player1.currentBet = 0;\n            window.player2.currentBet = 0;\n            window.dealCountTurn = 1;\n        const players = [window.player1, window.player2];\n        \n        \n        d3.selectAll(\".player1cards\").remove();\n        d3.selectAll(\".player2cardsrez\").remove();\n        d3.selectAll(\".flopcards\").remove();\n        d3.selectAll(\".winnerName\").remove();\n        \n        let first;\n        for (let i = 0; i < playerShift; i++) {\n            first = players[0];\n            players.shift(1);\n            players.push(first)\n        }\n        window.players = players\n        playerShift += 1;\n        \n        for (let i = 0; i < window.players.length; i++) {\n            window.players[i].cardPool = [];\n            window.players[i].holecards = [];\n            window.players[i].currentBet = 0;\n            window.players[i].deadmoney = 0;\n        }\n        \n        \n        deal.dealCards();\n\n        \n\n        document.getElementById('player2chips').innerHTML = window.player2.chips;\n        document.getElementById('player1chips').innerHTML = window.player1.chips;\n        if (window.players[0] === window.player1) {\n            document.getElementById('whos-turn').innerHTML = \"Mike McDermott's Turn\"\n        } else if (window.players[0] === window.player2) {\n            document.getElementById('whos-turn').innerHTML = \"Click CPU Player for computer turn\"\n        }\n        document.getElementById(\"philbet\").innerHTML = \"\"\n        document.getElementById(\"mikebet\").innerHTML = \"\"\n        document.getElementById('raise2x').innerHTML = \"Raise 2x\"\n        document.getElementById('call').innerHTML = \"Call\"\n        window.turnCount = 0;\n\n    }\n    }\n\n    document.getElementById('call').onclick = function callBet() {\n        if (window.players[0] === window.player1) {\n            document.getElementById('whos-turn').innerHTML = \"Click CPU Player for computer turn\"\n            document.getElementById('mikebet').innerHTML = \"call \" + window.player2.currentBet\n            game.call();\n            document.getElementById('player2chips').innerHTML = window.player2.chips;\n            document.getElementById('player1chips').innerHTML = window.player1.chips;\n            // document.getElementById('raise2x').innerHTML = \"Raise\"\n        }\n    }\n\n    document.getElementById('check').onclick = function checkTurn() {\n        if (window.players[0] === window.player1) {\n            document.getElementById('whos-turn').innerHTML = \"Click CPU Player for computer turn\"\n            document.getElementById('mikebet').innerHTML = \"check\"\n            game.check();\n        }\n    }\n\n    document.getElementById('raise2x').onclick = function raiseTwox() {\n        if (window.players[0] === window.player1) {\n            document.getElementById('whos-turn').innerHTML = \"Click CPU Player for computer turn\"\n            game.raiseTwoTimes();\n            if (window.player2.currentBet === 0) {\n                // document.getElementById('raise2x').innerHTML = \"Raise 2x\"\n                document.getElementById('mikebet').innerHTML = \"raise 20\"\n            } else {\n                document.getElementById('raise2x').innerHTML = 'Raise 2x'\n                document.getElementById('mikebet').innerHTML = 'Raise ' + window.player2.currentBet * 2;\n            }\n            document.getElementById('player2chips').innerHTML = window.player2.chips;\n            document.getElementById('player1chips').innerHTML = window.player1.chips;\n        }\n    }\n\n    document.getElementById('fold').onclick = function foldCards() {\n        if (window.players[0] === window.player1) {\n            d3.selectAll(\".player1cards\").remove();\n            d3.selectAll('.player2cards').remove();\n            game.fold();\n            document.getElementById('mikebet').innerHTML = \"fold\"\n            window.dealCountTurn = 0;\n            document.getElementById(\"whos-turn\").innerHTML = \"\"\n        }\n        \n        // d3.selectAll(\".player2cardsrez\").remove();\n    }\n\n    document.getElementById('cpu').onclick = function computerPlayer() {\n        if (window.players[0] === window.player2) {\n            document.getElementById('whos-turn').innerHTML = \"Mike Mcdermott's Turn\"\n            game.computer()\n            document.getElementById('player2chips').innerHTML = window.player2.chips;\n            document.getElementById('player1chips').innerHTML = window.player1.chips;\n        }\n    }\n\n})"],"sourceRoot":""}